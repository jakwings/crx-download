#!/bin/sh

# References:
# https://ungoogled-software.github.io/ungoogled-chromium-wiki/faq

set -e

echo() {
  printf '%s\n' "$*"
}
help() {
  echo 'Usage:'
  echo '    crx-download [url] [output_file] [browser_version]'
  echo
  echo 'Downloading requires the program: curl, wget or aria2c.'
}

#FAKE_USER_AGENT=''

BROWSER_VER_MIN='31.0.1609.0'

REF_URL="https://chrome.google.com/webstore/"
APP_URL="https://chrome.google.com/webstore/detail/"
CRX_URL="https://clients2.google.com/service/update2/crx"

if [ "$#" -eq 0 ]; then
  help
  exit 0
fi

# remove prefix (path) ".../webstore/detail/"
APP_ID="${1#${APP_URL}}"
# remove suffix (query, hash) "?a=x&b=y&...", "#..."
APP_ID="${APP_ID%%[?#]*}"
# remove suffix (trailing slashes "/" and junk)
while case "${APP_ID}" in (*[!a-z]) true;; (*) false; esac; do
  APP_ID="${APP_ID%[!a-z]}"
done
# remove prefix (optional slug and junk) "ublock-origin/"
APP_ID="${APP_ID##*[!a-z]}"
# remove suffix (junk)
APP_ID="${APP_ID%%[!a-z]*}"
# final check
case "${APP_ID}" in ('' | *[!a-z]*)
  echo "[ERROR] invalid extention ID \"${APP_ID}\"" >&2
  exit 1
esac

OUT_FILE="${2:-${APP_ID}.crx}"

BROWSER_VER="${3:-${BROWSER_VER_MIN}}"

USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/${BROWSER_VER} Safari/537.36}"
USER_AGENT="${FAKE_USER_AGENT-${USER_AGENT}}"

REFERRER="${USER_AGENT:+${REF_URL}}"

DOWNLOAD_URL="${CRX_URL}?response=redirect&acceptformat=crx,crx2,crx3&prodversion=${BROWSER_VER}&x=id%3D${APP_ID}%26installsource%3Dondemand%26uc"

unalias -a
have() {
  type "$@" > /dev/null 2>&1
}

echo "Downloading \"${OUT_FILE}\" from ${DOWNLOAD_URL} ..." >&2
echo >&2
if have curl; then
  exec curl -L --max-redirs 5 \
            --user-agent "${USER_AGENT}" \
            --referer "${REFERRER}" \
            "${DOWNLOAD_URL}" -o "${OUT_FILE}"
elif have wget; then
  exec wget --max-redirect=5 \
            --user-agent="${USER_AGENT}" \
            --referer="${REFERRER}" \
            "${DOWNLOAD_URL}" -O "${OUT_FILE}"
elif have aria2c; then
  exec aria2c \
              --user-agent="${USER_AGENT}" \
              --referer="${REFERRER}" \
              "${DOWNLOAD_URL}" -o "${OUT_FILE}"
else
  echo '[ERROR] downloader not found!' >&2
  exit 1
fi
